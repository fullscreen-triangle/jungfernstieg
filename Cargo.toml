[workspace]
resolver = "2"
members = [
    "crates/jungfernstieg-core",
    "crates/biological",
    "crates/virtual-blood",
    "crates/oscillatory-vm",
    "crates/consciousness",
    "crates/safety",
    "crates/environmental-sensing",
    "crates/monitoring",
    "crates/s-entropy",
    "crates/hardware-interfaces",
    "crates/cli",
]

[workspace.package]
version = "0.1.0"
edition = "2021"
authors = ["Kundai Farai Sachikonye <kundai.sachikonye@wzw.tum.de>"]
license = "MIT"
repository = "https://github.com/kundai-sachikonye/jungfernstieg"
documentation = "https://docs.rs/jungfernstieg"
description = "Biological Neural Network Viability Through Virtual Blood Circulatory Systems"
keywords = ["neurobiology", "consciousness", "s-entropy", "virtual-blood", "biological-computing"]
categories = ["science", "simulation", "hardware-support"]
rust-version = "1.75"

[workspace.dependencies]
# Core dependencies
tokio = { version = "1.35", features = ["full"] }
tokio-util = "0.7"
futures = "0.3"
async-trait = "0.1"

# Serialization and configuration
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
toml = "0.8"
config = "0.13"

# Logging and tracing
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }
log = "0.4"

# Error handling
anyhow = "1.0"
thiserror = "1.0"

# Numerical computation for S-entropy calculations
nalgebra = "0.32"
ndarray = "0.15"
num-traits = "0.2"
num-complex = "0.4"

# Time and scheduling for oscillatory VM
chrono = { version = "0.4", features = ["serde"] }
cron = "0.12"

# Hardware interfaces and I/O
serialport = "4.2"
embedded-hal = "1.0"
rppal = { version = "0.14", optional = true }  # Raspberry Pi GPIO

# Monitoring and metrics
prometheus = "0.13"
metrics = "0.21"
metrics-exporter-prometheus = "0.12"

# Web interface for monitoring
axum = "0.7"
tower = "0.4"
tower-http = { version = "0.5", features = ["cors", "fs"] }
hyper = "1.0"

# Database for storing experimental data
sqlx = { version = "0.7", features = ["runtime-tokio-rustls", "sqlite", "chrono", "uuid"] }
uuid = { version = "1.6", features = ["v4", "serde"] }

# CLI framework
clap = { version = "4.4", features = ["derive", "env"] }
dialoguer = "0.11"
indicatif = "0.17"
console = "0.15"

# Testing utilities
proptest = "1.4"
mockall = "0.12"
wiremock = "0.5"

# Development tools
once_cell = "1.19"
lazy_static = "1.4"

[profile.dev]
debug = true
opt-level = 0
overflow-checks = true

[profile.release]
debug = false
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"

[profile.test]
debug = true
opt-level = 1

# Critical safety profile for biological operations
[profile.safety]
inherits = "release"
debug = true
overflow-checks = true
panic = "abort"

# Memorial dedication profile
[profile.stella-lorraine-masunda]
inherits = "safety"
debug-assertions = true
# Every build honors Saint Stella-Lorraine Masunda